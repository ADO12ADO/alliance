syntax = "proto3";
package alliance.alliance;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "alliance/params.proto";
import "google/protobuf/timestamp.proto";

option go_package = "alliance/x/alliance/types";

// key: denom value: AllianceAsset
message AllianceAsset {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  // Denom of the asset. It could either be a native token or an IBC token
  string denom      = 1 [(gogoproto.moretags) = "yaml:\"denom\""];
  // The reward weight specifies the ratio of rewards that will be given to each alliance asset
  // It does not need to sum to 1. rate = weight / total_weight
  // Native asset is always assumed to have a weight of 1.s
  string reward_weight = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // A positive take rate is used for liquid staking derivatives. It defines an annualized reward rate that
  // will be redirected to the distribution rewards pool
  string take_rate = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  string total_tokens = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
  string total_validator_shares = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  google.protobuf.Timestamp reward_start_time = 6 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable)   = false
  ];
}

message QueuedRewardRateChange {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string denom = 1;
  string prev_reward_rate = 2;
}

message RewardRateChangeSnapshot {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string prev_reward_weight = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  repeated RewardHistory reward_histories = 2 [
    (gogoproto.nullable)   = false
  ];
}